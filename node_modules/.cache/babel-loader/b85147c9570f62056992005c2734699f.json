{"ast":null,"code":"var _jsxFileName = \"/Users/billyhung/Desktop/take-home-master/client/src/components/HippoCentral.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getAllHippos } from \"../controllers/getAllHippos\";\nimport { addHippo } from \"../controllers/addHippo\";\nimport { getTestResults } from \"../controllers/getTestResults\";\nimport { addTestResult } from \"../controllers/addTestResult\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Input } from \"@material-ui/core\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport \"./index.scss\";\n\nconst HippoCentral = () => {\n  const [hippos, setHippos] = useState([]);\n  const [hippoName, setHippoName] = useState(\"\");\n  const [testResults, setTestResults] = useState([]);\n\n  const getHippos = () => {\n    getAllHippos().then(res => {\n      setHippos(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const getHippoTestResults = () => {\n    getTestResults().then(res => {\n      setTestResults(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const renderTestResult = hippo => {\n    let output;\n    testResults.forEach(result => {\n      if (result.patient_id === hippo.id) {\n        var _result$resource, _result$resource$valu;\n\n        output = result === null || result === void 0 ? void 0 : (_result$resource = result.resource) === null || _result$resource === void 0 ? void 0 : (_result$resource$valu = _result$resource.valueCodeableConcept) === null || _result$resource$valu === void 0 ? void 0 : _result$resource$valu.text;\n      }\n    });\n\n    if (output) {\n      return output;\n    } else {\n      return /*#__PURE__*/React.createElement(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        value: 0,\n        onChange: () => {\n          addTestResult({\n            resourceType: 'Observation'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, \"Positive for Hippo Virus\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, \"Negative for Hippo Virus\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, \"Inconclusive result for Hippo Virus\"));\n    }\n  };\n\n  useEffect(() => {\n    getHippos();\n    getHippoTestResults();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Hippo Central\"), /*#__PURE__*/React.createElement(Input, {\n    value: hippoName,\n    type: \"text\",\n    placeholder: \"hippo's name\",\n    onChange: e => {\n      setHippoName(e.target.value);\n    },\n    onKeyDown: e => {\n      if (e.key === \"Enter\") {\n        addHippo(hippoName, () => {\n          getHippos();\n          setHippoName(\"\");\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"table\",\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Hippo Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Test Result\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Updated At\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, hippos.map(hippo => {\n    var _hippo$resource, _hippo$resource$name;\n\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: hippo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, hippo === null || hippo === void 0 ? void 0 : (_hippo$resource = hippo.resource) === null || _hippo$resource === void 0 ? void 0 : (_hippo$resource$name = _hippo$resource.name) === null || _hippo$resource$name === void 0 ? void 0 : _hippo$resource$name.map(n => {\n      return n.given;\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, renderTestResult(hippo)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, new Date(hippo.updated_at).toISOString().split(\"T\")[0]));\n  })))));\n};\n\nexport default HippoCentral;","map":{"version":3,"sources":["/Users/billyhung/Desktop/take-home-master/client/src/components/HippoCentral.js"],"names":["React","useEffect","useState","getAllHippos","addHippo","getTestResults","addTestResult","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Input","MenuItem","Select","HippoCentral","hippos","setHippos","hippoName","setHippoName","testResults","setTestResults","getHippos","then","res","catch","err","console","log","getHippoTestResults","renderTestResult","hippo","output","forEach","result","patient_id","id","resource","valueCodeableConcept","text","resourceType","e","target","value","key","map","name","n","given","Date","updated_at","toISOString","split"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getAllHippos } from \"../controllers/getAllHippos\";\nimport { addHippo } from \"../controllers/addHippo\";\nimport { getTestResults } from \"../controllers/getTestResults\";\nimport { addTestResult } from \"../controllers/addTestResult\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Input } from \"@material-ui/core\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport \"./index.scss\";\n\nconst HippoCentral = () => {\n  const [hippos, setHippos] = useState([]);\n  const [hippoName, setHippoName] = useState(\"\");\n  const [testResults, setTestResults] = useState([]);\n\n  const getHippos = () => {\n    getAllHippos()\n      .then((res) => {\n        setHippos(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getHippoTestResults = () => {\n    getTestResults()\n      .then((res) => {\n        setTestResults(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const renderTestResult = (hippo) => {\n    let output;\n    testResults.forEach((result) => {\n      if (result.patient_id === hippo.id) {\n        output = result?.resource?.valueCodeableConcept?.text;\n      }\n    });\n\n    if (output) {\n      return output;\n    } else {\n      return (\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={0}\n          onChange={() => {\n            addTestResult({\n              resourceType: 'Observation'\n            })\n          }}\n        >\n          <MenuItem value={10}>Positive for Hippo Virus</MenuItem>\n          <MenuItem value={20}>Negative for Hippo Virus</MenuItem>\n          <MenuItem value={30}>Inconclusive result for Hippo Virus</MenuItem>\n        </Select>\n      );\n    }\n  };\n\n  useEffect(() => {\n    getHippos();\n    getHippoTestResults();\n  }, []);\n\n  return (\n    <div>\n      <h1>Hippo Central</h1>\n      <Input\n        value={hippoName}\n        type=\"text\"\n        placeholder=\"hippo's name\"\n        onChange={(e) => {\n          setHippoName(e.target.value);\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            addHippo(hippoName, () => {\n              getHippos();\n              setHippoName(\"\");\n            });\n          }\n        }}\n      ></Input>\n\n      <TableContainer component={Paper}>\n        <Table className=\"table\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Hippo Name</TableCell>\n              <TableCell align=\"right\">Test Result</TableCell>\n              <TableCell align=\"right\">Updated At</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {hippos.map((hippo) => (\n              <TableRow key={hippo.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {hippo?.resource?.name?.map((n) => {\n                    return n.given;\n                  })}\n                </TableCell>\n                <TableCell align=\"right\">{renderTestResult(hippo)}</TableCell>\n                <TableCell align=\"right\">\n                  {new Date(hippo.updated_at).toISOString().split(\"T\")[0]}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default HippoCentral;\n"]},"metadata":{},"sourceType":"module"}