{"ast":null,"code":"var _jsxFileName = \"/Users/billyhung/Desktop/take-home-master/client/src/components/HippoCentral.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getAllHippos } from \"../controllers/getAllHippos\";\nimport { addHippo } from \"../controllers/addHippo\";\nimport { getTestResults } from \"../controllers/getTestResults\";\nimport { addTestResult } from \"../controllers/addTestResult\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Input } from \"@material-ui/core\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport HippoInfo from \"./HippoInfo\";\nimport \"./index.scss\";\n\nconst HippoCentral = () => {\n  const [hippos, setHippos] = useState([]);\n  const [hippoName, setHippoName] = useState(\"\");\n  const [testResults, setTestResults] = useState([]);\n\n  const getHippos = () => {\n    getAllHippos().then(res => {\n      setHippos(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const getHippoTestResults = () => {\n    getTestResults().then(res => {\n      setTestResults(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // const renderTestResult = (hippo) => {\n  //   let output;\n  //   let report = 0;\n  //   testResults.forEach((result) => {\n  //     if (result.patient_id === hippo.id) {\n  //       output = result?.resource?.valueCodeableConcept?.text;\n  //     }\n  //   });\n  //   if (output) {\n  //     return output;\n  //   } else {\n  //     return (\n  //       <Select\n  //         labelId=\"demo-simple-select-label\"\n  //         id=\"demo-simple-select\"\n  //         value={report}\n  //         onChange={(e) => {\n  //           report = e.target.value;\n  //           console.log(e.target.value);\n  //           // addTestResult({\n  //           //   resourceType: \"Observation\",\n  //           //   code: \"\",\n  //           //   subject: { reference: `Patient/${hippo.id}` },\n  //           // });\n  //         }}\n  //       >\n  //         <MenuItem value={0}></MenuItem>\n  //         <MenuItem value={1}>Positive for Hippo Virus</MenuItem>\n  //         <MenuItem value={2}>Negative for Hippo Virus</MenuItem>\n  //         <MenuItem value={3}>Inconclusive result for Hippo Virus</MenuItem>\n  //       </Select>\n  //     );\n  //   }\n  // };\n\n\n  useEffect(() => {\n    getHippos();\n    getHippoTestResults();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Hippo Central\"), /*#__PURE__*/React.createElement(Input, {\n    value: hippoName,\n    type: \"text\",\n    placeholder: \"hippo's name\",\n    onChange: e => {\n      setHippoName(e.target.value);\n    },\n    onKeyDown: e => {\n      if (e.key === \"Enter\") {\n        addHippo(hippoName, () => {\n          getHippos();\n          setHippoName(\"\");\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"table\",\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Hippo Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Test Result\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"Updated At\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, hippos.map(hippo => /*#__PURE__*/React.createElement(HippoInfo, {\n    hippo: hippo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }) // <TableRow key={hippo.id}>\n  //   <TableCell component=\"th\" scope=\"row\">\n  //     {hippo?.resource?.name?.map((n) => {\n  //       return n.given;\n  //     })}\n  //   </TableCell>\n  //   <TableCell align=\"right\">{renderTestResult(hippo)}</TableCell>\n  //   <TableCell align=\"right\">\n  //     {new Date(hippo.updated_at).toISOString().split(\"T\")[0]}\n  //   </TableCell>\n  // </TableRow>\n  )))));\n};\n\nexport default HippoCentral;","map":{"version":3,"sources":["/Users/billyhung/Desktop/take-home-master/client/src/components/HippoCentral.js"],"names":["React","useEffect","useState","getAllHippos","addHippo","getTestResults","addTestResult","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Input","MenuItem","Select","HippoInfo","HippoCentral","hippos","setHippos","hippoName","setHippoName","testResults","setTestResults","getHippos","then","res","catch","err","console","log","getHippoTestResults","e","target","value","key","map","hippo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getAllHippos } from \"../controllers/getAllHippos\";\nimport { addHippo } from \"../controllers/addHippo\";\nimport { getTestResults } from \"../controllers/getTestResults\";\nimport { addTestResult } from \"../controllers/addTestResult\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Input } from \"@material-ui/core\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport HippoInfo from \"./HippoInfo\";\nimport \"./index.scss\";\n\nconst HippoCentral = () => {\n  const [hippos, setHippos] = useState([]);\n  const [hippoName, setHippoName] = useState(\"\");\n  const [testResults, setTestResults] = useState([]);\n\n  const getHippos = () => {\n    getAllHippos()\n      .then((res) => {\n        setHippos(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getHippoTestResults = () => {\n    getTestResults()\n      .then((res) => {\n        setTestResults(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // const renderTestResult = (hippo) => {\n  //   let output;\n  //   let report = 0;\n  //   testResults.forEach((result) => {\n  //     if (result.patient_id === hippo.id) {\n  //       output = result?.resource?.valueCodeableConcept?.text;\n  //     }\n  //   });\n\n  //   if (output) {\n  //     return output;\n  //   } else {\n  //     return (\n  //       <Select\n  //         labelId=\"demo-simple-select-label\"\n  //         id=\"demo-simple-select\"\n  //         value={report}\n  //         onChange={(e) => {\n  //           report = e.target.value;\n  //           console.log(e.target.value);\n  //           // addTestResult({\n  //           //   resourceType: \"Observation\",\n  //           //   code: \"\",\n  //           //   subject: { reference: `Patient/${hippo.id}` },\n  //           // });\n  //         }}\n  //       >\n  //         <MenuItem value={0}></MenuItem>\n  //         <MenuItem value={1}>Positive for Hippo Virus</MenuItem>\n  //         <MenuItem value={2}>Negative for Hippo Virus</MenuItem>\n  //         <MenuItem value={3}>Inconclusive result for Hippo Virus</MenuItem>\n  //       </Select>\n  //     );\n  //   }\n  // };\n\n  useEffect(() => {\n    getHippos();\n    getHippoTestResults();\n  }, []);\n\n  return (\n    <div>\n      <h1>Hippo Central</h1>\n      <Input\n        value={hippoName}\n        type=\"text\"\n        placeholder=\"hippo's name\"\n        onChange={(e) => {\n          setHippoName(e.target.value);\n        }}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            addHippo(hippoName, () => {\n              getHippos();\n              setHippoName(\"\");\n            });\n          }\n        }}\n      ></Input>\n\n      <TableContainer component={Paper}>\n        <Table className=\"table\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Hippo Name</TableCell>\n              <TableCell align=\"right\">Test Result</TableCell>\n              <TableCell align=\"right\">Updated At</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {hippos.map((hippo) => (\n              <HippoInfo hippo={hippo} />\n              // <TableRow key={hippo.id}>\n              //   <TableCell component=\"th\" scope=\"row\">\n              //     {hippo?.resource?.name?.map((n) => {\n              //       return n.given;\n              //     })}\n              //   </TableCell>\n              //   <TableCell align=\"right\">{renderTestResult(hippo)}</TableCell>\n              //   <TableCell align=\"right\">\n              //     {new Date(hippo.updated_at).toISOString().split(\"T\")[0]}\n              //   </TableCell>\n              // </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default HippoCentral;\n"]},"metadata":{},"sourceType":"module"}