{"ast":null,"code":"var _jsxFileName = \"/Users/billyhung/Desktop/take-home-master/client/src/components/HippoInfo.js\";\nimport React, { useState } from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { addTestResult } from \"../controllers/addTestResult\";\n\nconst HippoInfo = ({\n  hippo,\n  testResults\n}) => {\n  var _hippo$resource, _hippo$resource$name;\n\n  const [result, setResult] = useState(\"\");\n\n  const renderTestResult = hippo => {\n    let output;\n    testResults.forEach(result => {\n      var _result$resource, _result$resource$subj, _result$resource$subj2;\n\n      const parsedHippoId = result === null || result === void 0 ? void 0 : (_result$resource = result.resource) === null || _result$resource === void 0 ? void 0 : (_result$resource$subj = _result$resource.subject) === null || _result$resource$subj === void 0 ? void 0 : (_result$resource$subj2 = _result$resource$subj.reference) === null || _result$resource$subj2 === void 0 ? void 0 : _result$resource$subj2.split(\"/\")[1];\n\n      if (result.patient_id === hippo.id) {\n        var _result$resource2, _result$resource2$val;\n\n        output = result === null || result === void 0 ? void 0 : (_result$resource2 = result.resource) === null || _result$resource2 === void 0 ? void 0 : (_result$resource2$val = _result$resource2.valueCodeableConcept) === null || _result$resource2$val === void 0 ? void 0 : _result$resource2$val.text;\n      } else if (parsedHippoId === hippo.id) {\n        var _result$resource3;\n\n        output = result === null || result === void 0 ? void 0 : (_result$resource3 = result.resource) === null || _result$resource3 === void 0 ? void 0 : _result$resource3.code;\n      }\n    });\n\n    if (output) {\n      return output;\n    } else {\n      return /*#__PURE__*/React.createElement(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        value: result,\n        onChange: e => {\n          setResult(e.target.value);\n          addTestResult({\n            resourceType: \"Observation\",\n            code: \"\",\n            subject: {\n              reference: `Patient/${hippo.id}`\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \"Positive for Hippo Virus\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, \"Negative for Hippo Virus\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"Inconclusive result for Hippo Virus\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(TableRow, {\n    key: hippo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, hippo === null || hippo === void 0 ? void 0 : (_hippo$resource = hippo.resource) === null || _hippo$resource === void 0 ? void 0 : (_hippo$resource$name = _hippo$resource.name) === null || _hippo$resource$name === void 0 ? void 0 : _hippo$resource$name.map(n => {\n    return n.given;\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, renderTestResult(hippo)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, new Date(hippo.updated_at).toISOString().split(\"T\")[0]));\n};\n\nexport default HippoInfo;","map":{"version":3,"sources":["/Users/billyhung/Desktop/take-home-master/client/src/components/HippoInfo.js"],"names":["React","useState","TableCell","TableRow","MenuItem","Select","addTestResult","HippoInfo","hippo","testResults","result","setResult","renderTestResult","output","forEach","parsedHippoId","resource","subject","reference","split","patient_id","id","valueCodeableConcept","text","code","e","target","value","resourceType","name","map","n","given","Date","updated_at","toISOString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,aAAT,QAA8B,8BAA9B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA4B;AAAA;;AAC5C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMW,gBAAgB,GAAIJ,KAAD,IAAW;AAClC,QAAIK,MAAJ;AACAJ,IAAAA,WAAW,CAACK,OAAZ,CAAqBJ,MAAD,IAAY;AAAA;;AAC9B,YAAMK,aAAa,GAAGL,MAAH,aAAGA,MAAH,2CAAGA,MAAM,CAAEM,QAAX,8EAAG,iBAAkBC,OAArB,oFAAG,sBAA2BC,SAA9B,2DAAG,uBAAsCC,KAAtC,CAA4C,GAA5C,EAAiD,CAAjD,CAAtB;;AAEA,UAAIT,MAAM,CAACU,UAAP,KAAsBZ,KAAK,CAACa,EAAhC,EAAoC;AAAA;;AAClCR,QAAAA,MAAM,GAAGH,MAAH,aAAGA,MAAH,4CAAGA,MAAM,CAAEM,QAAX,+EAAG,kBAAkBM,oBAArB,0DAAG,sBAAwCC,IAAjD;AACD,OAFD,MAEO,IAAIR,aAAa,KAAKP,KAAK,CAACa,EAA5B,EAAgC;AAAA;;AACrCR,QAAAA,MAAM,GAAGH,MAAH,aAAGA,MAAH,4CAAGA,MAAM,CAAEM,QAAX,sDAAG,kBAAkBQ,IAA3B;AACD;AACF,KARD;;AAUA,QAAIX,MAAJ,EAAY;AACV,aAAOA,MAAP;AACD,KAFD,MAEO;AACL,0BACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,0BADV;AAEE,QAAA,EAAE,EAAC,oBAFL;AAGE,QAAA,KAAK,EAAEH,MAHT;AAIE,QAAA,QAAQ,EAAGe,CAAD,IAAO;AACfd,UAAAA,SAAS,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACArB,UAAAA,aAAa,CAAC;AACZsB,YAAAA,YAAY,EAAE,aADF;AAEZJ,YAAAA,IAAI,EAAE,EAFM;AAGZP,YAAAA,OAAO,EAAE;AAAEC,cAAAA,SAAS,EAAG,WAAUV,KAAK,CAACa,EAAG;AAAjC;AAHG,WAAD,CAAb;AAKD,SAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAaE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,eAcE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAdF,eAeE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAfF,eAgBE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAhBF,CADF;AAoBD;AACF,GApCD;;AAsCA,sBACE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEb,KAAK,CAACa,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,IAArB;AAA0B,IAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KADH,aACGA,KADH,0CACGA,KAAK,CAAEQ,QADV,4EACG,gBAAiBa,IADpB,yDACG,qBAAuBC,GAAvB,CAA4BC,CAAD,IAAO;AACjC,WAAOA,CAAC,CAACC,KAAT;AACD,GAFA,CADH,CADF,eAME,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BpB,gBAAgB,CAACJ,KAAD,CAA1C,CANF,eAOE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,IAAIyB,IAAJ,CAASzB,KAAK,CAAC0B,UAAf,EAA2BC,WAA3B,GAAyChB,KAAzC,CAA+C,GAA/C,EAAoD,CAApD,CADH,CAPF,CADF;AAaD,CAtDD;;AAwDA,eAAeZ,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { addTestResult } from \"../controllers/addTestResult\";\n\nconst HippoInfo = ({ hippo, testResults }) => {\n  const [result, setResult] = useState(\"\");\n\n  const renderTestResult = (hippo) => {\n    let output;\n    testResults.forEach((result) => {\n      const parsedHippoId = result?.resource?.subject?.reference?.split(\"/\")[1];\n\n      if (result.patient_id === hippo.id) {\n        output = result?.resource?.valueCodeableConcept?.text;\n      } else if (parsedHippoId === hippo.id) {\n        output = result?.resource?.code;\n      }\n    });\n\n    if (output) {\n      return output;\n    } else {\n      return (\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={result}\n          onChange={(e) => {\n            setResult(e.target.value);\n            addTestResult({\n              resourceType: \"Observation\",\n              code: \"\",\n              subject: { reference: `Patient/${hippo.id}` },\n            });\n          }}\n        >\n          <MenuItem value={0}></MenuItem>\n          <MenuItem value={1}>Positive for Hippo Virus</MenuItem>\n          <MenuItem value={2}>Negative for Hippo Virus</MenuItem>\n          <MenuItem value={3}>Inconclusive result for Hippo Virus</MenuItem>\n        </Select>\n      );\n    }\n  };\n\n  return (\n    <TableRow key={hippo.id}>\n      <TableCell component=\"th\" scope=\"row\">\n        {hippo?.resource?.name?.map((n) => {\n          return n.given;\n        })}\n      </TableCell>\n      <TableCell align=\"right\">{renderTestResult(hippo)}</TableCell>\n      <TableCell align=\"right\">\n        {new Date(hippo.updated_at).toISOString().split(\"T\")[0]}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default HippoInfo;\n"]},"metadata":{},"sourceType":"module"}